{
  "packages": [
    {
      "organization": "pramodya",
      "name": "myproject",
      "version": "0.1.11",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/pramodya/myproject/0.1.11",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/pramodya/myproject/0.1.11/myproject-2020r2-java11-0.1.11.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a main function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606455625000,
      "modules": [],
      "pullCount": 35
    },
    {
      "organization": "kishanthan",
      "name": "proj2",
      "version": "0.3.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/kishanthan/proj2/0.3.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/kishanthan/proj2/0.3.0/proj2-2020r2-java11-0.3.0.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a main function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606412661000,
      "modules": [],
      "pullCount": 7
    },
    {
      "organization": "sanduds",
      "name": "twilio",
      "version": "0.9.2",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/sanduds/twilio/0.9.2",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/sanduds/twilio/0.9.2/sanduds-twilio-java11-0.9.2.balo",
      "summary": "",
      "readme": "Connects to Twilio from Ballerina. \n\n# Package Overview\n\nThe Twilio connector allows you to send SMS, voice, OTP, and WhatsApp messages through the Twilio REST API. You can also send user secrets via SMS or voice message, verify OTP, and add and delete users. It handles basic authentication.\n\nWhatsApp messaging requires users to use predefined [message templates](https://www.twilio.com/docs/sms/whatsapp/tutorial/send-whatsapp-notification-messages-templates). Templates are message formats, which can be used over and over again to message users. Use of templates enables to maintain high-quality content as well as to avoid spam messages. However, this requires the WhatsApp message templates to be predefined.\n\n**Basic Operations**\n\nThe `ballerinax/twilio` package contains operations to get the Twilio account details, send SMS, send WhatsApp messages, and make voice calls.\n\n**Authy Operations**\n\nThe `ballerinax/twilio` package contains operations to get Authy app details, add a user, delete a user, get user status, get user secret, request OTP via SMS, request OTP via call, and verify OTP.\n\n## Compatibility\n\n|                          |    Version         |\n|:------------------------:|:------------------:|\n| Ballerina Language       | Swan Lake Preview7 |\n| Twilio Basic API         | 2010-04-01         |\n| Twilio Authy API Version | v1                 |\n\n## Sample\nFirst, import the `ballerinax/twilio` package into the Ballerina project.\n```ballerina\nimport ballerinax/twilio;\n```\n\n**Obtaining Tokens to Run the Sample**\n\n1. Visit [Twilio](https://www.twilio.com/) and create a Twilio Account.\n2. Obtain the following credentials from the Twilio dashboard:\n    * Account SId\n    * Auth Token\n    * X Authy API Secret\n\nYou can now enter the credentials in the Twilio endpoint configuration.\n```ballerina\ntwilio:TwilioConfiguration twilioConfig = {\n    accountSId: config:getAsString(\"ACCOUNT_SID\"),\n    authToken: config:getAsString(\"AUTH_TOKEN\"),\n    xAuthyKey: config:getAsString(\"AUTHY_API_KEY\")\n};\n\ntwilio:Client twilioClient = new(twilioConfig);\n```\n\nThe `sendSMS` remote function sends an SMS to a given mobile number from another given mobile number with the specified message.\n```ballerina\nvar details = twilioClient->sendSms(fromMobile, toMobile, message);\nif (details is  twilio:SmsResponse) {\n    // If successful, print SMS Details.\n    io:println(\"SMS Details: \", details);\n} else {\n    // If unsuccessful, print the error returned.\n    io:println(\"Error: \", details);\n}\n```\n\nThe `addAuthyUser` remote function adds an Authy user with the given email address, phone number, and country code.\n```ballerina\nvar details = twilioClient->addAuthyUser(email, phone, countryCode);\nif (details is  twilio:AuthyUserAddResponse) {\n    // If successful, print Authy user Details.\n    io:println(\"Authy user Details: \", details);\n} else {\n    // If unsuccessful, print the error returned.\n    io:println(\"Error: \", details);\n}\n```\n\nThe `requestOtpViaSms` remote function sends an OTP SMS to the mobile number of the given user ID.\n```ballerina\nvar details = twilioClient->requestOtpViaSms(userId);\nif (details is  twilio:AuthyOtpResponse) {\n    // If successful, print OTP SMS Details.\n    io:println(\"OTP SMS Details: \", details);\n} else {\n    // If unsuccessful, print the error returned.\n    io:println(\"Error: \", details);\n}\n```\n",
      "template": false,
      "licenses": [
        "Apache-2.0"
      ],
      "authors": [
        "Ballerina"
      ],
      "sourceCodeLocation": "https://github.com/ballerina-platform/module-ballerinax-twilio",
      "keywords": [
        "twilio",
        "sms",
        "call",
        "otp",
        "whatsapp"
      ],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1607489851000,
      "modules": [],
      "pullCount": 6
    },
    {
      "organization": "kasthuriraajan",
      "name": "connector_ui",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/kasthuriraajan/connector_ui/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/kasthuriraajan/connector_ui/0.1.0/kasthuriraajan-connector_ui-java11-0.1.0.balo",
      "summary": "",
      "readme": "Custom anotation package for connectors\n[//]: # \n\n# Module Overview\nThis package contains custom annotation for Connector Metadata - Display name\n\nTo use this in connectors:\n1. Pull this package using `ballerina pull kasthuriraajan/connector_ui`\n2. Import this package in required ballerina connector file.\n## Sample\n\n \n```ballerina\nimport kasthuriraajan/connector_ui;\n \n@connector_ui:ConnectorMetadata { displayName: \"Salesforce\" }\n \npublic client class SFDCClient {\n \n   @connector_ui:ConnectorMetadata { displayName: \"Foo Connector operation\" }\n   public remote function getAccounts(\n                 @connector_ui:ConnectorMetadata { displayName: \"Query\" } string query, \n                 @connector_ui:ConnectorMetadata { displayName: \"Max Elements\" } int batchSize)\n           return returns @tainted error\n              | @choreo_ui:ConnectorMetadata { displayName: \"Account\" } Account {\n               // impl\n           }\n  \n};\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1608052435000,
      "modules": [],
      "pullCount": 5
    },
    {
      "organization": "hevayo",
      "name": "my_project",
      "version": "0.3.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/hevayo/my_project/0.3.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/hevayo/my_project/0.3.0/hevayo-my_project-java11-0.3.0.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a main function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606462637000,
      "modules": [],
      "pullCount": 4
    },
    {
      "organization": "asmaj2",
      "name": "projfoo",
      "version": "0.1.2",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/asmaj2/projfoo/0.1.2",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/asmaj2/projfoo/0.1.2/asmaj2-projfoo-java11-0.1.2.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.\n\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606483853000,
      "modules": [],
      "pullCount": 4
    },
    {
      "organization": "bash",
      "name": "soap",
      "version": "0.1.0",
      "platform": "any",
      "languageSpecificationVersion": "2020r2",
      "URL": "/bash/soap/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/bash/soap/0.1.0/bash-soap-any-0.1.0.balo",
      "summary": "Connects from Ballerina to the SOAP backend. ",
      "readme": "Connects from Ballerina to the SOAP backend. \n\n# Module Overview\n\nThe SOAP connector allows you to send an ordinary XML request to a SOAP backend by specifying the necessary details to\nconstruct a SOAP envelope. It abstracts out the details of the creation of a SOAP envelope, headers, and the body in a\nSOAP message.\n\n## Compatibility\n|                          |      Versions      |\n|:------------------------:|:------------------:|\n| Ballerina Language       | Swan Lake Preview1 |\n| SOAP Version             | 1.1 & 1.2          |\n\n## Sample\n\nFirst, import the `ballerina/soap` module into the Ballerina project.\n```ballerina\nimport ballerina/soap;\n```\n\nInstantiate a connector by giving the backend URL.\n```ballerina\nsoap:Soap11Client soap11Client = new(\"http://localhost:9000/services/SimpleStockQuoteService\");\n```  \nor\n```ballerina\nsoap:Soap12Client soap12Client = new(\"http://localhost:9000/services/SimpleStockQuoteService\");\n```\n\nThe `sendReceive` function sends a SOAP request to the initiated backend URL. For SOAP 1.1 requests, you can invoke the sendReceive function by passing the `body` and the `soapAction`. For SOAP 1.2 requests, you can invoke it by passing only the body. \n\nIf you want to add WS-Security, WS-Addressing or other headers, you can configure the`Options` record accordingly and pass it to the function. \n```ballerina\nxml body = xml `<m0:getQuote xmlns:m0=\"http://services.samples\">\n                    <m0:request>\n                        <m0:symbol>WSO2</m0:symbol>\n                    </m0:request>\n                </m0:getQuote>`;\n\nsoap:UsernameToken usernameToken = {\n    username: \"admin\",\n    password: \"admin\",\n    passwordType: \"PasswordDigest\"\n};\n\nsoap:Options soapOptions = {\n    usernameToken: usernameToken\n};\nvar response = soapClient->sendReceive(body, \"urn:mediate\", soapOptions);\nif (response is soap:SoapResponse) {\n    io:println(response);\n} else {\n    io:println(response.message());\n}\n```\n\n### Usage Example\n\n```ballerina\nimport ballerina/io;\nimport ballerina/soap;\n  \npublic function main () {\n\n    soap:Soap12Client soapClient = new(\"http://ws.cdyne.com/phoneverify/phoneverify.asmx?wsdl\");\n\n    xml body = xml `<quer:CheckPhoneNumber xmlns:quer=\"http://ws.cdyne.com/PhoneVerify/query\"> \n         <quer:PhoneNumber>18006785432</quer:PhoneNumber>\n         <quer:LicenseKey>0</quer:LicenseKey>\n      </quer:CheckPhoneNumber>`;\n\n    var response = soapClient->sendReceive(body);\n    if (response is soap:SoapResponse) {\n        io:println(response[\"payload\"]);\n    } else {\n        io:println(response.message());\n    }    \n}\n```\n\nFollow the steps below to run this example.\n\n1. Save the example in a Ballerina file (e.g., `soapExample.bal`).\n2. Execute the `ballerina run soapExample.bal` command to run the file.\nYou will get a response similar to the following.\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<soap:Body xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\">\n   <CheckPhoneNumberResponse xmlns=\"http://ws.cdyne.com/PhoneVerify/query\">\n      <CheckPhoneNumberResult>\n         <Company>Toll Free</Company>\n         <Valid>true</Valid>\n         <Use>Assigned to a code holder for normal use.</Use>\n         <State>TF</State>\n         <RC />\n         <OCN />\n         <OriginalNumber>18006785432</OriginalNumber>\n         <CleanNumber>8006785432</CleanNumber>\n         <SwitchName />\n         <SwitchType />\n         <Country>United States</Country>\n         <CLLI />\n         <PrefixType>Landline</PrefixType>\n         <LATA />\n         <sms>Landline</sms>\n         <Email />\n         <AssignDate>Unknown</AssignDate>\n         <TelecomCity />\n         <TelecomCounty />\n         <TelecomState>TF</TelecomState>\n         <TelecomZip />\n         <TimeZone />\n         <Lat />\n         <Long />\n         <Wireless>false</Wireless>\n         <LRN />\n      </CheckPhoneNumberResult>\n   </CheckPhoneNumberResponse>\n</soap:Body>\n```\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1613112625000,
      "modules": [],
      "pullCount": 4
    },
    {
      "organization": "hevayo",
      "name": "cptest",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/hevayo/cptest/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/hevayo/cptest/0.1.0/hevayo-cptest-java11-0.1.0.balo",
      "summary": "",
      "readme": "this is a simple module\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606791024000,
      "modules": [],
      "pullCount": 2
    },
    {
      "organization": "hemikak",
      "name": "foo",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/hemikak/foo/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/hemikak/foo/0.1.0/foo-2020r2-java11-0.1.0.balo",
      "summary": "",
      "readme": "# FOO BAR\n\nHello this is foo bar",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606242550000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "hemikak",
      "name": "foo",
      "version": "1.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/hemikak/foo/1.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/hemikak/foo/1.1.0/foo-2020r2-java11-1.1.0.balo",
      "summary": "",
      "readme": "# FOO BAR\n\nHello this is foo bar",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606242963000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "kishanthan",
      "name": "proj6",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/kishanthan/proj6/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/kishanthan/proj6/0.1.0/kishanthan-proj6-java11-0.1.0.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a main function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606713324000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "kishanthan",
      "name": "myproj2",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/kishanthan/myproj2/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/kishanthan/myproj2/0.1.0/kishanthan-myproj2-java11-0.1.0.balo",
      "summary": "",
      "readme": "This is a test project\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606756619000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "kishanthan",
      "name": "myproj4",
      "version": "1.10.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/kishanthan/myproj4/1.10.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/kishanthan/myproj4/1.10.0/kishanthan-myproj4-java11-1.10.0.balo",
      "summary": "",
      "readme": "This is test project with java interop\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606803797000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "sandudstest",
      "name": "azureStorageTest",
      "version": "0.1.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/sandudstest/azureStorageTest/0.1.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/sandudstest/azureStorageTest/0.1.0/sandudstest-azureStorageTest-java11-0.1.0.balo",
      "summary": "",
      "readme": "\n# Package Overview\nThis is a test package for connector Devepolment.\n\n## Module Overview\nTest modules only\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606891998000,
      "modules": [],
      "pullCount": 1
    },
    {
      "organization": "pramodya",
      "name": "pkg_a",
      "version": "1.0.0",
      "platform": "java11",
      "languageSpecificationVersion": "2020r2",
      "URL": "/pramodya/pkg_a/1.0.0",
      "balaVersion": "2.0.0",
      "balaURL": "https://fileserver.central.ballerina.io/2.0/pramodya/pkg_a/1.0.0/pramodya-pkg_a-java11-1.0.0.balo",
      "summary": "",
      "readme": "Prints \"Hello World!\" with a main function.\n[//]: # (above is the package summary)\n\n# Package Overview\nPrints \"Hello World!\" as the output to the command line using a main function.\n",
      "template": false,
      "licenses": [],
      "authors": [],
      "sourceCodeLocation": "",
      "keywords": [],
      "ballerinaVersion": "Ballerina 2.0.0",
      "createdDate": 1606911765000,
      "modules": [],
      "pullCount": 1
    }
  ],
  "count": 27,
  "offset": 0,
  "limit": 15
}
